<Page Style="{DynamicResource PageStyle1}" x:Class="WPFDemo.Pages.ReportPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WPFDemo.Pages"
      xmlns:c="clr-namespace:WPFDemo.Converters"
      xmlns:dm="clr-namespace:WPFDemo.DataModels"
      mc:Ignorable="d"
      d:Background="White"
      MinHeight="500"
      MinWidth="400"
      Height="500" 
      Width="400"
      Title="ReportPage">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" SnapsToDevicePixels="true" StrokeThickness="1" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="CustomButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Canvas x:Name="Canvas"  Width="{TemplateBinding Width}" 
                                Height="{TemplateBinding Height}" 
                                SnapsToDevicePixels="True"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
                            <Ellipse x:Name="Ellipse"  Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" 
                                     Fill="{TemplateBinding Background}"  
                                     Stroke="{TemplateBinding BorderBrush}" 
                                     StrokeThickness="{TemplateBinding BorderThickness}"
                                     VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                     HorizontalAlignment="{TemplateBinding HorizontalAlignment}"/>
                        </Canvas>
                            <!--<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>-->
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="Stroke" TargetName="Ellipse" Value="{StaticResource Button.Disabled.Border}"/>
                                <!--<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PageStyle1" TargetType="{x:Type Page}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Page}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter Content="{TemplateBinding Content}"/>
                        </Border>
                        <!--<ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard >
                                        <ThicknessAnimation Storyboard.TargetProperty="Margin"
                                            Duration="0:0:0.5" From="500 0 0 0" To="0 0 0 0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>-->
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Page.Resources>
    
    
    <StackPanel Margin="5">
        <Label Content="Issue ID"/>
        <TextBox Text="{Binding Id}" Margin="5 0 5 0" IsEnabled="False"/>
        <Grid Margin="0 5 0 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Label Grid.Row="0" Grid.Column="0" Content="Username"/>
            <TextBox Text="{Binding User}" Grid.Row="1" Grid.Column="0" Margin="5 0 5 5" />

            <Label Grid.Row="0" Grid.Column="1" Content="Registration date"/>
            <DatePicker SelectedDate="{Binding Date}" Grid.Row="1" Grid.Column="1"  Margin="5 0 5 5" Padding="0"/>
        </Grid>

        <Label Grid.Row="0" Grid.Column="0" Content="Title"/>
        <TextBox Text="{Binding Title}" Grid.Row="1" Grid.Column="0" Margin="5 0 5 5" />

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <Label Grid.RowSpan="1" Grid.ColumnSpan="2" Content="Type of issue"/>
            <Border Grid.Row="1" Grid.ColumnSpan="4" BorderBrush="LightGray"  BorderThickness="2"/>
            <RadioButton Margin="10" GroupName="IssueTypeGroup" Grid.Row="1" Grid.Column="0" 
                         Content="Bug" 
                         IsChecked="{Binding IssueType, 
                            Converter={x:Static c:RadioButtonToIssueTypeConverter.Instance},
                            ConverterParameter={x:Static dm:IssueType.BUG}}"/>
            <RadioButton Margin="10" GroupName="IssueTypeGroup" Grid.Row="1" Grid.Column="1" 
                         Content="Documentation"
                          IsChecked="{Binding IssueType, 
                            Converter={x:Static c:RadioButtonToIssueTypeConverter.Instance},
                            ConverterParameter={x:Static dm:IssueType.DOCUMENTATION}}"/>
            <RadioButton Margin="10" GroupName="IssueTypeGroup" Grid.Row="1" Grid.Column="2" 
                         Content="Performance"
                          IsChecked="{Binding IssueType, 
                            Converter={x:Static c:RadioButtonToIssueTypeConverter.Instance},
                            ConverterParameter={x:Static dm:IssueType.PERFORMANCE}}"/>
            <RadioButton Margin="10" GroupName="IssueTypeGroup" Grid.Row="1" Grid.Column="3" 
                         Content="Notice"
                          IsChecked="{Binding IssueType, 
                            Converter={x:Static c:RadioButtonToIssueTypeConverter.Instance},
                            ConverterParameter={x:Static dm:IssueType.NOTICE}}"/>
        </Grid>

        <Label Content="Description"/>
        <TextBox Height="150" Text="{Binding Description}"
                 TextWrapping="Wrap"
                 HorizontalContentAlignment="Left" 
                 VerticalContentAlignment="Top" 
                 HorizontalAlignment="Stretch"
                 Margin="5 0 5 5" 
                 AcceptsReturn="True"
                 AcceptsTab="True"
                 Tag="Some Text"/>

        <CheckBox IsChecked="{Binding IsUrgent}" Margin="5 0 5 5" Content="Urgent"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <!--<Button Style="{DynamicResource CustomButton}" Width="120" Height="50" Grid.Column="0" Margin="5" Content="Clear" Command="{Binding ClearCommand}"/>-->
            <Button Grid.Column="0" Margin="5" Content="Clear" Command="{Binding ClearCommand}"/>
            <Button Grid.Column="1" Margin="5" Content="Submit" Command="{Binding SubmitCommand}"/>
        </Grid>

    </StackPanel>
</Page>
